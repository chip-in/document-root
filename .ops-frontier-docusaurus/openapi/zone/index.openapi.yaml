openapi: 3.1.1
info:
  title: Chip-in zone API
  description: |-
    これはChip-in のゾーンの dnsProvider のAPI仕様です。
  contact:
    email: mitsuru@procube.jp
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: https://127.0.0.1:8080
security: 
  -  bearerAuth: []
tags: 
  - name: rrset
    description: Operations related to RRSet (Resource Record Set).
paths:
  '/rrsets':
    get:
      tags:
        - rrset
      summary: Get RRSets.
      operationId: getRRSets
      parameters: 
        - name: "-"
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/QueryParameter'
      responses:
        '200':
          description: |-
            Successful operation, returns a list of RRSet.
            If no RRset are found, an empty array is returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RRSet'
        '400':
          description: Bad request, invalid query parameters.
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      tags:
        - rrset
      summary: Update the existing RRSet.
      operationId: updateRRSet
      requestBody:
        description: |-
          The RRSet to update. The name and type are used to identify the RRSet.
          The changetype is required and must be either REPLACE or DELETE.
          If changetype is REPLACE, the records and comments are updated.
          If changetype is DELETE, all records and comments are deleted.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RRSet'
        required: true
      responses:
        '200':
          description: |-
            Successful operation, return the RRSet after the update.
            If changetype is REPLACE, returns the updated RRSet.
            If changetype is DELETE, returns an empty array.
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/RRSet'
        '400':
          description: Invalid content is supplied
        '404':
          description: RRSet not found
        '422':
          description: Validation exception
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components: 
  schemas:

    RRSet:
      title: RRSet
      description: This represents a Resource Record Set (all records with the same name and type).
      required:
        - name
        - type
        - ttl
        - changetype
        - records
      properties:
        name:
          type: string
          format: hostname
          description: |-
            MUST be a valid DNS name, and MUST end with a dot. The name is case-insensitive.
            The suffix of the name must bearer the zone name, which is the name of the zone this RRSet belongs to.
        type:
          type: string
          enum:
            - A
            - AAAA
            - CNAME
            - MX
            - NS
            - PTR
            - SOA
            - SRV
            - TXT
          description: 'Type of this record (e.g. “A”, “PTR”, “MX”)'
        ttl:
          type: integer
          description: 'DNS TTL of the records, in seconds. MUST NOT be included when changetype is set to “DELETE”.'
        changetype:
          type: string
          enum:
            - REPLACE
            - DELETE
          description: |-
            MUST be added when updating the RRSet. Must be REPLACE or DELETE.
            With DELETE, all existing RRs matching name and type will be deleted, including all comments.
            With REPLACE: when records is present, all existing RRs matching name and type will be deleted, and then new records given in records will be created.
            If no records are left, any existing comments will be deleted as well.
            When comments is present, all existing comments for the RRs matching name and type will be deleted, and then new comments given in comments will be created.
        records:
          type: array
          description: 'All records in this RRSet. When updating Records, this is the list of new records (replacing the old ones). Must be empty when changetype is set to DELETE. An empty list results in deletion of all records (and comments).'
          items:
            $ref: '#/components/schemas/Record'
        comments:
          type: array
          description: 'List of Comment. Must be empty when changetype is set to DELETE. An empty list results in deletion of all comments. modified_at is optional and defaults to the current server time.'
          items:
            $ref: '#/components/schemas/Comment'
      additionalProperties: false

    Record:
      title: Record
      description: The RREntry object represents a single record.
      required:
        - content
      properties:
        content:
          type: string
          description: 'The content of this record'
        disabled:
          type: boolean
          description: 'Whether or not this record is disabled. When unset, the record is not disabled'
      additionalProperties: false

    Comment:
      title: Comment
      description: A comment about an RRSet.
      properties:
        content:
          type: string
          description: 'The actual comment'
        account:
          type: string
          description: 'Name of an account that added the comment'
        modified_at:
          type: integer
          description: 'Timestamp of the last change to the comment'
      additionalProperties: false

    QueryParameter:
      title: QueryParameter
      description: |-
        Query parameters for listing rrset.
        The parameters are used to filter the results.
      properties:
        name:
          type: string
          description: |-
            Filter by the name of the rrset. If not specified, all rrset are returned.
        type:
          type: string
          enum:
            - A
            - AAAA
            - CNAME
            - MX
            - NS
            - PTR
            - SOA
            - SRV
            - TXT
          description: |-
            Filter by the type of the rrset. If not specified, all types are returned.  
      additionalProperties: false

    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
      additionalProperties: false
      
  securitySchemes:
    bearerAuth: # セキュリティスキームの定義
      type: http
      scheme: bearer
      bearerFormat: JWT